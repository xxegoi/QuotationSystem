@model QuotationSystem.Models.SalesQuotationViewModel


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>SalesQuotationViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(Model=>Model.BuyerList, htmlAttributes:new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model=>model.BuyerList,Model.BuyerList,"请选择采购员",htmlAttributes:new { @class="form-control"})
                @Html.ValidationMessageFor(model=>model.BuyerList,"",htmlAttributes:new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Header.ExchangeRate, htmlAttributes:new {@class="control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model=>model.Header.ExchangeRate,new { htmlAttributes=new {@class="form-control" } })
                @Html.ValidationMessageFor(model => model.Header.ExchangeRate, "", htmlAttributes: new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="form-group">
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model=>model.Detail.ProductClass)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model=>model.Detail.Metal)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model=>model.Detail.Shape)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model=>model.Detail.Model)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model=>model.Detail.Technology)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model=>model.Detail.Qty)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model=>model.Detail.SalesPrice)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model=>model.Detail.Memo)
                        </th>
                    </tr>
                </thead>
                <tbody>

                </tbody>
            </table>


        </div>
        <hr />

        
            <div class="form-group">
                @Html.LabelFor(model => model.SelectClass, new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.SelectClass, Model.SelectClass, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Detail.Metal, new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Detail.Metal, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Detail.Shape, new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Detail.Shape, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Detail.Model, new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Detail.Model, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Detail.Technology, new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Detail.Technology, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Detail.Qty, new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Detail.Qty, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Detail.Memo, new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Detail.Memo, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

       <hr />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
